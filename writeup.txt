Donia Tung & August Ray JonesCS10, Dartmouth Fall 2018PS6Consider possible multi-client issues.What unexpected/undesired behaviors are possible? Can you actually make any of them happen? Where and why do you use synchronized methods; will they handle everything?       One unexpected or undesired behavior that’s possible is if two users try to edit the sketch at the exact same time. By oneself, they can’t really make that happen, but if each of us were to run the editor on our own computers, and try to edit the sketch at the same time, we would produce this problem. This is part of the reason why we use synchronized methods; they ensure that only one thread at a time is accessing the sketch and can handle this behavior. Deadlock and starvation are two undesired behaviors that can’t easily be solved just by making methods atomic with “synchronized”. I wonder if deleting an object that another user was in the process of moving, for example, would create a starvation type of situation, or if the synchronization of methods would prevent such a thing from occurring. I think you could create a starvation type of situation if one user was editing one shape, and another tried to edit the same shape, but I honestly am not sure if there’s a way to create a deadlock type of situation with this problem set. 